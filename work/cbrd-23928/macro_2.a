	.file	"macro.c"
	.text
	.section	.rodata.str1.8,"aMS",@progbits,1
	.align 8
.LC0:
	.string	"[main] parser->has_internal_error : %d\n"
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC1:
	.string	"[main] parser has error."
.LC2:
	.string	"end."
	.section	.text.startup,"ax",@progbits
	.p2align 4,,15
	.globl	main
	.type	main, @function
main:
.LFB22:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	movq	%rsi, %r12
	movl	$1, %esi
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	movl	%edi, %ebp
	movl	$16, %edi
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	call	calloc
	movq	%rax, %rbx
	cmpl	$1, %ebp
	jg	.L15
	testq	%rax, %rax
	je	.L4
.L3:
	cmpq	$0, (%rbx)
	jne	.L5
	testb	$1, 8(%rbx)
	jne	.L5
.L4:
	movl	$.LC2, %edi
	call	puts
	xorl	%eax, %eax
.L1:
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L5:
	.cfi_restore_state
	movl	$.LC1, %edi
	call	puts
	movl	$1, %eax
	jmp	.L1
.L15:
	movq	8(%r12), %rdi
	xorl	%esi, %esi
	movl	$10, %edx
	call	strtol
	movzbl	8(%rbx), %edx
	movl	$.LC0, %edi
	andl	$1, %eax
	andl	$-2, %edx
	movzbl	%al, %esi
	orl	%eax, %edx
	xorl	%eax, %eax
	movb	%dl, 8(%rbx)
	call	printf
	jmp	.L3
	.cfi_endproc
.LFE22:
	.size	main, .-main
	.ident	"GCC: (GNU) 8.3.1 20191121 (Red Hat 8.3.1-5)"
	.section	.note.GNU-stack,"",@progbits
